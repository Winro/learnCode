
git 学习笔记

基本说明

	1、安装git
	2、指定文件夹，右键选择[git bash here]
	
	
各区域说明
	key words explain：
		1、workspace:工作区
		2、stage：暂存区
		3、repository:版本仓库
		4、HEAD：表示当前版本，最新提交至 repository 版本号  commit id（例：b1027632058e3a02f4e8f6979dc5fe2898647229）

	作业流程：
	
	1、创建版本库:
	
		git init[见指令说明]
	
	2、正常提交流程：
	
		workspace[工作区] ---（code:git add <file/文件夹>）--->  stage[暂存区]  ---(code:git commit -m "some message")--->  repository[版本仓库]
	
	3、版本回退:
	
		git reset[见指令说明]
	
	4、撤销修改：
		
		git checkout[见指令说明]
		
		
	思考：
	1、
		第一次修改 -> git add -> 第二次修改 -> git commit
		结果：repository 中存放 第一次修改，workspace 为 第二次修改
	2、
		第一次修改 -> git add -> 第二次修改 -> git add -> git commit
		结果：repository 中存放 第二次修改，workspace 为 第二次修改
		
	
指令说明 
1、git init：
			功能说明：指定 位置创建repository[版本仓库]，当前文件夹下边出现文件夹 .git。
			语法：[  git init  ];
			
2、git status：
			功能说明：确认当前仓库状态。
			语法：[  git status  ];
			
3、git diff：
			功能说明：比较 workspace 与 repository 之间的差异。
			语法：
				正常:[  git diff <file>  ];
				可以查看工作区和版本库里面最新版本的区别:[  git diff HEAD -- <file>  ];

4、git log：
			功能说明：显示从最近到最远的提交日志。
			语法：
				多行显示:[  git log  ] ;
				单行显示:[  git log --pretty=oneline  ];

5、git reflog：
			功能说明：显示命令日志。
			语法：[  git reflog  ];

6、git reset：
			功能说明：返回版本号
			语法：
				返回上一版本：[  git reset --hard HEAD^  ];
				返回指定版本：[  git reset --hard <commit id>],例([  git reset --hard b1027  ]);
				
			详细说明：
					HEAD:为指针。
					
					HEAD
					|
					|-----> 版本：版本3
							版本：版本2
							版本：版本1
				
				命令:[  git reset --hard HEAD^  ]
				
					HEAD
					|
					|       版本：版本3
					|-----> 版本：版本2
							版本：版本1

7、git checkout:
				功能说明：撤销修改，stage 中丢弃工作区的修改；
				语法：[  git checkout -- <file>  ]
				
				使用说明：
						1、文件修改 [  未提交 git add 状态  ]，
							使用 [  git status  ],显示当前修改文件未提交至stage
							使用 [  git checkout  ] ,
							使用 [  git status  ],显示当前分支内已无需提交至stage文件，也就是说，原文件被返回至
				

				
				

